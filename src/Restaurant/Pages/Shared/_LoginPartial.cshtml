@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}

<div class="d-flex justify-content-between align-items-center">
    @if (user != null && SignInManager.IsSignedIn(User))
    {
        <div class="d-flex align-items-center flex-grow-1">
            <span class="avatar me-2">A</span>
            <a class="btn-manage" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <div class="d-flex flex-column">
                    <span class="fs-14 fw-500">@user.FullName</span>
                    <span class="fs-14">@user.UserName</span>
                </div>
            </a>

        </div>
        <div>
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", new { area = "Admin" })" method="post">
                <button type="submit" class="btn-logout">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-log-out"><path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path><polyline points="16 17 21 12 16 7"></polyline><line x1="21" y1="12" x2="9" y2="12"></line></svg>
                </button>
            </form>
        </div>
    }
    else
    {
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        </ul>

    }
</div>
